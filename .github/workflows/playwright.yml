name: 🤖 Playwright Tests - DTE Automation

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    # Ejecutar diariamente a las 6:00 AM UTC (para monitoreo continuo)
    - cron: '0 6 * * *'

jobs:
  test:
    timeout-minutes: 10
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        # Ejecutar en múltiples versiones de Node.js
        node-version: [18.x, 20.x]
        
    steps:
    - name: 📥 Checkout repository
      uses: actions/checkout@v4
      
    - name: 🚀 Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: 📦 Install dependencies
      run: npm ci
      
    - name: 🎭 Install Playwright Browsers
      run: npx playwright install --with-deps chromium
      
    - name: 🧪 Run Playwright tests
      env:
        # Variables de entorno para el test (sin credenciales reales)
        LOGIN_EMAIL: test@example.com
        LOGIN_PASSWORD: test_password
      run: npm test
      
    - name: 📊 Upload Playwright Report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report-node${{ matrix.node-version }}
        path: playwright-report/
        retention-days: 30
        
    - name: 📸 Upload Test Results Screenshots
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-node${{ matrix.node-version }}
        path: test-results/
        retention-days: 30

  # Job para análisis de código
  code-quality:
    runs-on: ubuntu-latest
    steps:
    - name: 📥 Checkout repository
      uses: actions/checkout@v4
      
    - name: 🚀 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: 📦 Install dependencies
      run: npm ci
      
    - name: 🔍 Lint code
      run: npm run lint || echo "Lint script no configurado"
      
    - name: 🧪 Type check
      run: npm run type-check || echo "Type check script no configurado"

  # Job para generar badges dinámicos
  update-badges:
    if: github.ref == 'refs/heads/main'
    needs: test
    runs-on: ubuntu-latest
    steps:
    - name: 📥 Checkout repository
      uses: actions/checkout@v4
      
    - name: 🏷️ Update test status badge
      run: |
        echo "Tests status: Passing ✅" > test-status.txt
        
    - name: 📤 Commit badge updates
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add test-status.txt || echo "No changes to commit"
        git diff --staged --quiet || git commit -m "🏷️ Update test badges [skip ci]"
        git push || echo "No changes to push"
